name : Build

on:
  push:
    branches:
        - master
  pull_request:
    branches:
      - master

jobs:
  check_clang_format:
    name: "Check C++ style"
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Run clang-format style check for C/C++/Protobuf programs.
      uses: jidicula/clang-format-action@v4.11.0
      with:
        clang-format-version: '16'
        check-path: '.'
        #exclude-regex: 'sse2neon.h'

  editorconfig:
    name: "Check editorconfig"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  ubuntu_2204:
    strategy:
      fail-fast: false
      matrix:
        cxx: [20]
        build_type: ["RelWithDebInfo"]
        compiler:
          [
            "g++-12",
            "clang++-14"
          ]
    name: "Ubuntu 22.04 (${{ matrix.compiler }}, C++${{ matrix.cxx }}, ${{matrix.build_type}})"
    runs-on: ubuntu-22.04
    outputs:
      id: "${{ matrix.compiler }} (C++${{ matrix.cxx }}, ${{ matrix.build_type }})"
    steps:
      - uses: actions/checkout@v3
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "ccache-ubuntu2204-${{ matrix.compiler }}-${{ matrix.cxx }}-${{ matrix.build_type }}"
          max-size: 256M
      - name: "update APT database"
        run: sudo apt -q update

      - name: Install Compilers
        run: sudo apt install -y g++-11 clang-14

      - name: "Download dependencies"
        run: sudo apt install cmake ninja-build catch2
      - name: "Cmake configure"
        run:  cmake -S . -B build -G Ninja -D BOXED_CPP_TESTS=ON -D ENABLE_TIDY=ON -DPEDANTIC_COMPILER=ON -D CMAKE_CXX_FLAGS="-Wno-unknown-warning-option" -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}  -DCMAKE_CXX_STANDARD=${{ matrix.cxx }} -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
      - name: "build "
        run: cmake --build build  --parallel 3

      - name: "run test"
        run: ./build/test-boxed-cpp
